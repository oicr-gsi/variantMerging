## Commands
This section lists command(s) run by variantMerging workflow

* Running variantMerging


```
 set -euxo pipefail
 python3 ~{preprocessScript} ~{vcfFile} -o ~{basename(vcfFile, '.vcf.gz')}_tmp.vcf -r ~{referenceId} 
 bgzip -c ~{basename(vcfFile, '.vcf.gz')}_tmp.vcf > ~{basename(vcfFile, '.vcf.gz')}_processed.vcf.gz
 bcftools view -f "PASS" ~{basename(vcfFile, '.vcf.gz')}_processed.vcf.gz | bgzip -c > ~{basename(vcfFile, '.vcf.gz')}_processed_pass.vcf.gz
```

```
 python3 <<CODE
 import re
 sorted_indices = []
 unsortedNames = re.split(",",  "~{sep=',' unsortedWorkflows}")
 priorities = re.split(",", "~{sep=',' unsortedPriorities}")
 unsortedFiles = re.split(",", "~{sep=',' unsortedVcfs}")
 unsortedPassFiles = re.split(",", "~{sep=',' unsortedPassVcfs}")
 sorted_indices = []
 for p in priorities:
    if p - 1 >= 0:
        sorted_indices.append(p -1)

 with open("~{sortedFiles}", mode='w') as out:
    out.writelines([unsortedFiles[i] + "\n" for i in sorted_indices])
 with open("~{sortedPassFiles}", mode='w') as out2:
    out2.writelines([unsortedPassFiles[j] + "\n" for j in sorted_indices])
 with open("~{sortedWorkflows}", mode='w') as out3:
    out3.writelines([unsortedNames[k] + "\n" for k in sorted_indices])
 CODE
```

```
 gatk MergeVcfs -I ~{sep=" -I " inputVcfs} -O ~{outputPrefix}_mergedVcfs.vcf.gz
```

```
  set -euxo pipefail 
  python3 <<CODE
  import sys
  v = "~{sep=' ' inputVcfs}"
  vcfFiles = v.split()
  with open("vcf_list", 'w') as l:
      for v in vcfFiles:
          l.write(v + "\n")
  CODE

  python3 ~{combiningScript} vcf_list -c ~{outputPrefix}_tmp.vcf -n ~{sep=',' inputNames} 
  gatk SortVcf -I ~{outputPrefix}_tmp.vcf -R ~{referenceFasta} -O ~{outputPrefix}_combined.vcf.gz
```

```
  ~{ensembleProgram} ensemble ~{outputPrefix}_ensembled.vcf.gz ~{referenceFasta} --names ~{sep=',' inputNames} --numpass ~{minCallers} ~{additionalParameters} ~{sep=' ' inputVcfs}
```

```
 set -euxo pipefail
 python3 ~{postprocessScript} ~{vcfFile} -o ~{basename(vcfFile, '.vcf.gz')}_tmp.vcf -r ~{referenceId} -t ~{tumorName} ~{"-n " + normalName}
 bgzip -c ~{basename(vcfFile, '.vcf.gz')}_tmp.vcf > ~{basename(vcfFile, '.vcf.gz')}.vcf.gz
 tabix -p vcf ~{basename(vcfFile, '.vcf.gz')}.vcf.gz
```
